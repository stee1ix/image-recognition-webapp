{"version":3,"sources":["Components/Navigation/Navigation.js","Components/Signin/Signin.js","Components/Register/Register.js","Components/FaceRecognition/FaceRecognition.js","Components/Logo/Logo.js","Components/ImageLinkForm/ImageLinkForm.js","Components/Rank/Rank.js","App.js","serviceWorker.js","index.js","Components/Logo/brain.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","this","htmlFor","type","name","onChange","React","Component","Register","onNameChange","FaceRecognition","imageUrl","box","alt","src","width","height","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Logo","options","max","paddingTop","brain","ImageLinkForm","onInputChange","onButtonSubmit","Rank","entries","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","console","log","err","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.b2e918a9.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n\t\tif (isSignedIn) {\n\t\t\treturn (\n\t\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n\t\t\t\t\t<p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\n\t\t\t\t</nav>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n\t\t\t\t\t<p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\n\t\t\t\t\t<p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\n\t\t\t\t</nav>\n\t\t\t);\n\t\t}\n}\n\nexport default Navigation;","import React from 'react';\n\nclass Signin extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsignInEmail: '',\n\t\t\tsignInPassword: ''\n\t\t}\n\t}\n\n\tonEmailChange = (event) => {\n\t\tthis.setState({signInEmail: event.target.value});\n\t}\n\n\tonPasswordChange = (event) => {\n\t\tthis.setState({signInPassword: event.target.value});\n\t}\n\n\tonSubmitSignIn = () => {\n\t\tfetch('http://localhost:3000/signin', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail: this.state.signInEmail,\n\t\t\t\tpassword: this.state.signInPassword\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(user => {\n\t\t\tif (user.id) {\n\t\t\t\tthis.props.loadUser(user);\n\t\t\t\tthis.props.onRouteChange('home');\n\t\t\t}\n\t\t})\n\t}\n\n\trender () {\n\t\tconst { onRouteChange } = this.props;\n\t\treturn (\n\t\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n\t\t\t<main className=\"pa4 black-80\">\n\t\t\t<div className=\"measure\">\n\t\t\t<fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n\t\t\t<legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n\t\t\t<div className=\"mt3\">\n\t\t\t<label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n\t\t\t<input \n\t\t\t\tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\ttype=\"email\" \n\t\t\t\tname=\"email-address\"  \n\t\t\t\tid=\"email-address\"\n\t\t\t\tonChange={this.onEmailChange}\n\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"mv3\">\n\t\t\t<label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n\t\t\t<input \n\t\t\t\tclassName=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\ttype=\"password\" \n\t\t\t\tname=\"password\"  \n\t\t\t\tid=\"password\"\n\t\t\t\tonChange={this.onPasswordChange}\n\t\t\t/>\n\t\t\t</div>\n\t\t\t</fieldset>\n\t\t\t<div className=\"\">\n\t\t\t<input \n\t\t\t\tonClick={this.onSubmitSignIn}\n\t\t\t\tclassName=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n\t\t\t\ttype=\"submit\" \n\t\t\t\tvalue=\"Sign in\"\n\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"lh-copy mt3\">\n\t\t\t\t<p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t</main>\n\t\t\t</article>\n\t\t);\n\t}\n\t\n}\n\nexport default Signin;\n","import React from 'react';\n\nclass Register extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tname: '',\n\t\t\temail: '',\n\t\t\tpassword: ''\n\t\t}\n\t}\n\n\tonNameChange = (event) => {\n\t\tthis.setState({name: event.target.value});\n\t}\n\n\tonEmailChange = (event) => {\n\t\tthis.setState({email: event.target.value});\n\t}\n\n\tonPasswordChange = (event) => {\n\t\tthis.setState({password: event.target.value});\n\t}\n\n\tonSubmitSignIn = () => {\n\t\tfetch('http://localhost:3000/register', {\n\t\t\tmethod: 'post',\n\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: this.state.name,\n\t\t\t\temail: this.state.email,\n\t\t\t\tpassword: this.state.password\n\t\t\t})\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(user => {\n\t\t\tif (user.id) {\n\t\t\t\tthis.props.loadUser(user);\n\t\t\t\tthis.props.onRouteChange('home');\n\t\t\t}\n\t\t})\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n\t\t\t<main className=\"pa4 black-80\">\n\t\t\t<div className=\"measure\">\n\t\t\t<fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n\t\t\t<legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n\t\t\t<div className=\"mt3\">\n\t\t\t<label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n\t\t\t<input \n\t\t\t\tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\ttype=\"text\" \n\t\t\t\tname=\"name\" \n\t\t\t\tid=\"name\"\n\t\t\t\tonChange = {this.onNameChange}\n\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"mt3\">\n\t\t\t<label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n\t\t\t<input \n\t\t\t\tclassName=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\ttype=\"email\" \n\t\t\t\tname=\"email-address\" \n\t\t\t\tid=\"email-address\"\n\t\t\t\tonChange = {this.onEmailChange}\n\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"mv3\">\n\t\t\t<label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n\t\t\t<input \n\t\t\t\tclassName=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n\t\t\t\ttype=\"password\" \n\t\t\t\tname=\"password\" \n\t\t\t\tid=\"password\"\n\t\t\t\tonChange = {this.onPasswordChange}\n\t\t\t/>\n\t\t\t</div>\n\t\t\t</fieldset>\n\t\t\t<div className=\"\">\n\t\t\t<input \n\t\t\t\tonClick={this.onSubmitSignIn}\n\t\t\t\tclassName=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n\t\t\t\ttype=\"submit\" \n\t\t\t\tvalue=\"Register\"/>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t</main>\n\t\t\t</article>\n\t\t);\n\t}\n}\n\nexport default Register;\n","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n\treturn (\n\t\t<div className='center ma'>\n\t\t<div className='absolute mt2'>\n\t\t\t<img id='inputimage' alt='' src={imageUrl} width='500px' height='auto'/>\n\t\t\t<div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\n\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default FaceRecognition;","import React from 'react';\nimport Tilt from 'react-tilt';\nimport brain from './brain.png';\nimport './Logo.css';\n\nconst Logo = () => {\n\treturn (\n\t\t<div className='ma4 mt0'>\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max : 60 }} style={{ height: 150, width: 150 }} >\n \t\t\t\t<div className=\"Tilt-inner pa3\">\n \t\t\t\t\t<img style={{paddingTop: '5px'}} src={brain} alt=\"brain\"/>\n \t\t\t\t</div>\n\t\t\t</Tilt>\n\t\t</div>\n\t);\n}\n\nexport default Logo;","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n\treturn (\n\t\t<div>\n\t\t\t<p className='f3'>\n\t\t\t\t{'This Brain will detect faces in your picture'}\n\t\t\t</p>\n\t\t\t<div className='center'>\n\t\t\t\t<div className='form center pa4 br3 shadow-5'>\n\t\t\t\t\t<input className='f4 pa2 w-70 center' type='tex' onChange={onInputChange}/>\n\t\t\t\t<button \n\t\t\t\tclassName='w-30 grow f4 link ph3 pv2 dib white bg-blue'\n\t\t\t\tonClick={onButtonSubmit}\n\t\t\t\t>Detect</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ImageLinkForm;","import React from 'react';\n\nconst Rank = ({ name, entries }) => {\n\treturn (\n\t\t<div>\n\t\t\t<div className='white f3'>\n\t\t\t\t{`${name}, your current entry count is...`}\n\t\t\t</div>\n\t\t\t<div className='white f1'>\n\t\t\t\t{entries}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Rank;\n","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './Components/Navigation/Navigation';\nimport Signin from './Components/Signin/Signin';\nimport Register from './Components/Register/Register';\nimport FaceRecogniton from './Components/FaceRecognition/FaceRecognition';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport './App.css';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height -  (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    fetch(\"http://localhost:3000/imageurl\", {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n          input: this.state.input\n        })\n      })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch(\"http://localhost:3000/image\", {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, {entries: count}))\n          })\n          .catch(console.log)\n\n        } \n       this.displayFaceBox(this.calculateFaceLocation(response))\n     })\n      .catch(err => console.log(err));\n    }\n\n    onRouteChange = (route) => {\n      if (route === 'signout') {\n        this.setState(initialState)\n      } else if (route === 'home') {\n        this.setState({isSignedIn: true})\n      }\n      this.setState({route: route});\n    }\n\n    render() {\n      const { isSignedIn, imageUrl, route, box } = this.state; // destructuring so we don't have to use this.state everywhere\n      return (\n        <div className=\"App\">\n        <Particles className=\"particles\"\n        params={particlesOptions} \n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ?  <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n              <ImageLinkForm \n              onInputChange={this.onInputChange} \n              onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecogniton box={box} imageUrl={imageUrl} />\n            </div>\n          :  (\n              route === 'signin'\n              ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n              : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )   \n        }\n        </div>\n      );\n    }\n  }\n\n\n  export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.a3afb07e.png\";"],"sourceRoot":""}